{"version":3,"sources":["components/chart/chart.js","components/ticker/ticker.js","types/types.js","actions/action.js","components/control-panel/control-panel.js","components/app/app.js","store/store.js","reducers/tickers-reducer.js","index.js"],"names":["Chart","ResponsiveContainer","width","height","BarChart","data","this","props","margin","top","right","left","bottom","barSize","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Bar","fill","PureComponent","Ticker","useState","graph","setGraph","useEffect","prevState","price","item","last_trade_time","length","arr","slice","className","ticker","Button","variant","onClick","removeTicker","SET_TICKERS","loadInitialDataSocket","socket","dispatch","on","console","log","id","emit","tickers","type","payload","setTicker","ControlPanel","tickerName","setTickerName","tickersTicks","setTickersTicks","color","TextField","onChange","evt","target","value","onKeyDown","event","key","addTicker","fullWidth","placeholder","delay","InputProps","inputProps","min","io","App","useSelector","state","useDispatch","removedTickers","setRemovedTickers","filter","toLocaleLowerCase","map","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc0026cd.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\r\nimport {BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer} from 'recharts';\r\n\r\nexport default class Chart extends PureComponent {\r\n    render() {\r\n        return (\r\n            <ResponsiveContainer width=\"50%\" height={250}>\r\n                <BarChart\r\n                    width={500}\r\n                    height={300}\r\n                    data={this.props.data}\r\n                    margin={{\r\n                        top: 40,\r\n                        right: 30,\r\n                        left: 20,\r\n                        bottom: 10,\r\n                    }}\r\n                    barSize={15}\r\n                >\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"last_trade_time\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Bar dataKey=\"price\" fill=\"#82ca9d\" />\r\n                </BarChart>\r\n            </ResponsiveContainer>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Chart from '../chart/chart';\r\nimport Button from '@material-ui/core/Button';\r\nimport DeleteTwoToneIcon from '@material-ui/icons/DeleteTwoTone';\r\nimport './ticker.css'\r\n\r\nfunction Ticker(props) {\r\n    const [graph, setGraph] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setGraph(prevState => [...prevState,\r\n            {\r\n                price: props.item.price,\r\n                last_trade_time: props.item.last_trade_time\r\n            }]\r\n        )\r\n    }, [props.item])\r\n\r\n\r\n    if (graph.length > 20) {\r\n        const arr = graph.slice(1, graph.length);\r\n        setGraph(arr)\r\n    }\r\n\r\n    const deleteTicker = () => {\r\n        props.removeTicker(props.item.ticker)\r\n    };\r\n\r\n    return (\r\n        <li className=\"ticker\">\r\n            <div className=\"ticker-name\">\r\n                <h3>{props.item.ticker}</h3>\r\n            </div>\r\n            <div>\r\n                {\"price\"}\r\n                {props.item.price}\r\n            </div>\r\n            <Chart data={graph}/>\r\n            <Button\r\n                variant=\"contained\"\r\n                onClick={deleteTicker}\r\n            >\r\n                <DeleteTwoToneIcon/>\r\n            </Button>\r\n        </li>\r\n\r\n    );\r\n}\r\n\r\nexport default Ticker;","export const SET_TICKERS = 'SET_TICKERS';","import {SET_TICKERS} from \"../types/types\";\r\n\r\nexport const setTicker = (tickers) => {\r\n    return {\r\n        type: SET_TICKERS,\r\n        payload: tickers\r\n    }\r\n};\r\n\r\nexport const loadInitialDataSocket =(socket)=> {\r\n    return (dispatch) => {\r\n        socket.on(\"connect\", () => {\r\n            console.log(socket.id);\r\n        })\r\n        socket.emit('start');\r\n        socket.on('ticker', function(tickers) {\r\n            dispatch(setTicker(tickers))\r\n        });\r\n    }\r\n}\r\n\r\n","import React, {useState} from \"react\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './control-panel.css'\r\nimport StopTwoToneIcon from \"@material-ui/icons/StopTwoTone\";\r\nimport PlayArrowTwoToneIcon from \"@material-ui/icons/PlayArrowTwoTone\";\r\n\r\nfunction ControlPanel(props) {\r\n    const [tickerName, setTickerName] = useState('');\r\n    const [tickersTicks, setTickersTicks] = useState(true);\r\n\r\n    const stopTickers = () => {\r\n        props.socket.emit('stop');\r\n        setTickersTicks(false);\r\n    };\r\n\r\n    const startTickers = () => {\r\n        props.socket.emit('start');\r\n        setTickersTicks(true);\r\n    };\r\n\r\n    const addTicker = (event) => {\r\n        if (event.key === 'Enter') {\r\n            props.addTicker(tickerName)\r\n        }\r\n    }\r\n    const setDelay = (event) => {\r\n        const delay = +event.target.value;\r\n        if (event.key === 'Enter' && delay >= 1000) {\r\n            props.socket.emit('set_delay', delay)\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"control-panel-tickers\">\r\n            <div\r\n                className=\"stop-start-tickers\"\r\n            >\r\n                {tickersTicks ? 'Stop' : 'Start'}\r\n                <div\r\n                    className=\"stop-start-tickers-button\"\r\n                    onClick={tickersTicks ? stopTickers : startTickers}\r\n                >\r\n                    {\r\n                        tickersTicks ? <StopTwoToneIcon\r\n                            color='primary'\r\n\r\n                            className='svg_icons'\r\n                        /> : <PlayArrowTwoToneIcon\r\n                            color='primary'\r\n                            className='svg_icons'\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n\r\n            <TextField\r\n                onChange={(evt) => setTickerName(evt.target.value)}\r\n                onKeyDown={addTicker}\r\n                fullWidth={false}\r\n                placeholder=\"Add ticker\"\r\n                id=\"standard-basic\"\r\n            />\r\n\r\n            <TextField\r\n                onKeyDown={setDelay}\r\n                fullWidth={false}\r\n                placeholder=\"Set delay\"\r\n                type=\"number\"\r\n                InputProps={{\r\n                    inputProps: {\r\n                        min: 1000\r\n                    }\r\n                }}\r\n                id=\"standard-basic\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ControlPanel;","import React, {useEffect, useState} from \"react\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport Ticker from '../ticker/ticker'\r\nimport './app.css';\r\nimport {io} from \"socket.io-client\";\r\nimport {loadInitialDataSocket} from \"../../actions/action\";\r\nimport ControlPanel from \"../control-panel/control-panel\";\r\n\r\nconst socket = io(\"https://finance-test-server.herokuapp.com/\");\r\n\r\nfunction App() {\r\n    const tickers = useSelector(state => state);\r\n    const dispatch = useDispatch();\r\n    const [removedTickers, setRemovedTickers] = useState([]);\r\n\r\n    const removeTicker = (ticker) => {\r\n        setRemovedTickers(prevState => ([...prevState, ticker]))\r\n    };\r\n\r\n    const addTicker = (tickerName) => {\r\n        setRemovedTickers(prevState => prevState.filter(ticker => ticker.toLocaleLowerCase() !== tickerName.toLocaleLowerCase()))\r\n    };\r\n\r\n    useEffect(() => {\r\n        dispatch(loadInitialDataSocket(socket));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.emit('filter-tickers', removedTickers);\r\n    }, [removedTickers]);\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Test task</h1>\r\n            </header>\r\n            <main>\r\n                <ControlPanel\r\n                    socket={socket}\r\n                    addTicker={addTicker}\r\n                >\r\n                </ControlPanel>\r\n                <ul>\r\n                    {tickers && tickers.map(item =>\r\n                        <Ticker\r\n                            key={item.ticker}\r\n                            item={item}\r\n                            removeTicker={removeTicker}\r\n                        />)}\r\n                </ul>\r\n            </main>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import {createStore, applyMiddleware} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {tickersReducer} from \"../reducers/tickers-reducer\";\r\n\r\nexport const store = createStore(\r\n    tickersReducer,\r\n    null,\r\n    applyMiddleware(thunk)\r\n);\r\n\r\n//store.subscribe(()=>console.log(store.getState()))\r\n","import {SET_TICKERS} from \"../types/types\";\r\n\r\nexport function tickersReducer (state, action) {\r\n    switch (action.type) {\r\n        case SET_TICKERS:\r\n            return action.payload\r\n        default:\r\n            return  state\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/app';\r\nimport {store} from \"./store/store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n      <React.StrictMode>\r\n          <App />\r\n      </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}